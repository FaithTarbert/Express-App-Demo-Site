//REQUIRE STANDARD CODE LIBRARIES: this is the standard js file generated by express generator: app.js, this holds all the routes
var createError = require('http-errors');
var express = require('express');
var path = require('path');
var cookieParser = require('cookie-parser');
var logger = require('morgan');

//REQUIRE ROUTING GET REQUEST ADDRESSES: (1) add a new variable with assigned route here for each page address that will be sent as a web request to render
var indexRouter = require('./routes/index');
var usersRouter = require('./routes/users');
var addBreedRouter = require('./routes/addBreed');
var addCatRouter = require('./routes/addCat');
var editCatRouter = require('./routes/editCat');
var deleteCatRouter = require('./routes/deleteCat');
var searchCatRouter = require('./routes/searchCats');


//initialize the express library you required at the top - middleware below runs on top of express (which is my variable app.)
var app = express();

//REQUIRE TEMPLATING ENGINE: view engine setup (hbs is handlebars, views is the default directory), runs on top of express
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'hbs');

//MIDDLEWARE: app.use associates various middleware handlers that intercept http requests and does stuff before the response is sent...
app.use(logger('dev'));
//this replaces body-parser, which is now built into express, we call it by using .json()
// const bodyParser = require('body-parser')
// app.use('bodyParser', { urlencoded: true })
// app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());

//STATIC FILES: this tells Express where your public static files will live, ie images, pdf's, etc. (no need to include 'public' in the image routes, express knows when you designate it here)
app.use(express.static(path.join(__dirname, 'public')));

//ROUTING(2):this designates the actual http path, also is the path to use in your hyperlinks on your html pages
app.use('/', indexRouter);
app.use('/cats/add-breed', addBreedRouter);
app.use('/cats/add-cat', addCatRouter);
app.use('/cats/edit-cat', editCatRouter);
app.use('/cats/delete-cat', deleteCatRouter);
app.use('/cats/search', searchCatRouter);
// app.use('/users', usersRouter);

// catch any 404s and forward to error handler
app.use(function(req, res, next) {
  next(createError(404));
});

//error handler
app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  //render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;
